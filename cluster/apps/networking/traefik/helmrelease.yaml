---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: traefik
      version: 10.1.2
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system

  dependsOn:
    - name: cert-manager
      namespace: cert-manager

  # See default values here: https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
  # Also read: https://traefik.io/blog/install-and-configure-traefik-with-helm/
  values:
    image:
      name: ghcr.io/k8s-at-home/traefik

    logs:
      general:
        level: DEBUG
      access:
        enabled: false

    deployment:
      kind: Deployment
      replicas: 1

    service:
      enabled: true
      type: LoadBalancer
      spec:
        loadBalancerIP: "${INGRESS_NGINX_LB}"
        externalTrafficPolicy: Local

    ingressClass:
      enabled: true
      isDefaultClass: true

    ingressRoute:
      dashboard:
        enabled: false # TODO: change to true

    globalArguments:
      - "--api.insecure=true"
      - "--serversTransport.insecureSkipVerify=true"
      - "--providers.kubernetesingress.ingressclass=traefik"
      # - "--metrics.prometheus=true"
      # - "--metrics.prometheus.entryPoint=metrics"
    additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=${LB_TRAEFIK}"

    # metrics:
    #   prometheus:
    #     enabled: true
    #     entryPoint: metrics

    ports:
      traefik:
        expose: true
      web:
        redirectTo: websecure
      websecure:
        enabled: true
        options: "default"
      # metrics:
      #   port: 8082
      #   expose: true
      #   exposedPort: 8082

    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true

    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 500Mi
