apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 23.3.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  values:
    prometheus:
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          # traefik.ingress.kubernetes.io/router.middlewares: "kube-system-forwardauth-authelia@kubernetescrd"
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - prom.${SECRET_DOMAIN}
        path: /
        pathType: Prefix
        tls:
          - secretName: tls.prometheus
            hosts:
              - prom.${SECRET_DOMAIN}
      prometheusSpec:
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          ## Using PersistentVolumeClaim
          ##
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 20Gi
    grafana:
      adminPassword: ${SECRET_GRAFANA_PASSWORD}
      grafana.ini:
        panels:
          disable_sanitize_html: true
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          # traefik.ingress.kubernetes.io/router.middlewares: "kube-system-forwardauth-authelia@kubernetescrd"
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - grafana.${SECRET_DOMAIN}
        path: /
        tls:
          - secretName: tls.grafana
            hosts:
              - grafana.${SECRET_DOMAIN}
      persistence:
        accessModes:
          - ReadWriteMany
        enabled: true
        size: 5Gi
        type: pvc
      initChownData:
        ## If false, data ownership will not be reset at startup
        ## This allows the prometheus-server to be run with an arbitrary user
        ##
        enabled: false
      # plugins:
      #   - grafana-piechart-panel
