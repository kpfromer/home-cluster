apiVersion: v1
kind: Service
metadata:
  name: journal
  namespace: default
spec:
  ports:
    - port: 3000
  selector:
    app: journal
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: journal
  namespace: default
spec:
  selector:
    matchLabels:
      app: journal
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: journal
    spec:
      containers:
        - image: ghcr.io/kpfromer/journal-site/journal-site:latest
          name: journal
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: journal-site-secret
                  key: url
          ports:
            - containerPort: 3000
              name: web

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - "amd64"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: journal
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    # traefik.ingress.kubernetes.io/router.middlewares: "kube-system-forwardauth-authelia@kubernetescrd"
    cert-manager.io/cluster-issuer: letsencrypt-production
    # hajimari.io/enable: "true"
    # hajimari.io/icon: "traffic-light"
    # hajimari.io/appName: "traefik"
spec:
  tls:
    - secretName: "tls.journal"
      hosts:
        - "journal.${SECRET_DOMAIN}"
  rules:
    - host: journal.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: journal
                port:
                  number: 3000